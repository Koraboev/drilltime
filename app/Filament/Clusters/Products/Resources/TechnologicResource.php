<?php

namespace App\Filament\Clusters\Products\Resources;

use App\Filament\Clusters\Products;
use App\Filament\Resources\TechnologicResource\Pages;
use App\Filament\Resources\TechnologicResource\RelationManagers;
use App\Models\ShopBrand;
use App\Models\Technologic;
use Filament\Forms\Components\Grid;
use Filament\Forms\Components\Section;
use Filament\Forms\Components\SpatieMediaLibraryFileUpload;
use Filament\Forms\Components\Tabs;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Support\Str;
use Filament\Forms;
use Filament\Notifications\Notification;


class TechnologicResource extends Resource
{
    protected static ?string $model = Technologic::class;
    protected static ?string $cluster = Products::class;

    protected static ?string $recordTitleAttribute = 'name';

    protected static ?string $navigationIcon = 'heroicon-o-tag';

    public static function getNavigationParentItem(): ?string
    {
        return __('main.Products'); // TODO: Change the autogenerated stub
    }

    public static function getNavigationLabel(): string
    {
        return __('main.TechnologicalCategory'); // TODO: Change the autogenerated stub
    }
    public static function getLabel(): ?string
    {
        return __('main.TechnologicalCategory'); // TODO: Change the autogenerated stub
    }

    protected static ?int $navigationSort = 3;


    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Section::make()
                    ->schema([
                        Grid::make()
                            ->schema([
                                Tabs::make('Tabs')
                                    ->tabs([
                                        Forms\Components\Tabs\Tab::make('O\'zbek')
                                            ->schema([
                                                Forms\Components\TextInput::make('name_uz')
                                                    ->required()
                                                    ->maxLength(255)
                                                    ->live(onBlur: true)
                                                    ->label(__('main.Name'))
                                                    ->afterStateUpdated(fn(string $operation, $state, Forms\Set $set) => $operation === 'create' ? $set('slug_uz', Str::slug($state)) : null),

                                                Forms\Components\TextInput::make('slug_uz')
                                                    ->dehydrated()
                                                    ->label(__('main.Slug'))
                                                    ->required()
                                                    ->maxLength(255)
                                                    ->unique(Technologic::class, 'slug_uz', ignoreRecord: true),
                                                Forms\Components\TextInput::make('meta_title_uz')
                                                    ->maxLength(255)
                                                    ->live(onBlur: true)
                                                    ->required()
                                                    ->label(__('main.MetaTitle')),

                                                Forms\Components\MarkdownEditor::make('meta_description_uz')
                                                    ->columnSpan('full')
                                                    ->required()
                                                    ->label(__('main.MetaContent')),

                                            ]),
                                        Forms\Components\Tabs\Tab::make('Pусский')
                                            ->schema([
                                                Forms\Components\TextInput::make('name_ru')
                                                    ->required()
                                                    ->maxLength(255)
                                                    ->live(onBlur: true)
                                                    ->label(__('main.Name'))
                                                    ->afterStateUpdated(fn(string $operation, $state, Forms\Set $set) => $operation === 'create' ? $set('slug_ru', Str::slug($state)) : null),

                                                Forms\Components\TextInput::make('slug_ru')
                                                    ->dehydrated()
                                                    ->label(__('main.Slug'))
                                                    ->required()
                                                    ->maxLength(255)
                                                    ->unique(Technologic::class, 'slug_ru', ignoreRecord: true),
                                                Forms\Components\TextInput::make('meta_title_ru')
                                                    ->maxLength(255)
                                                    ->live(onBlur: true)
                                                    ->required()
                                                    ->label(__('main.MetaTitle')),

                                                Forms\Components\MarkdownEditor::make('meta_description_ru')
                                                    ->columnSpan('full')
                                                    ->required()
                                                    ->label(__('main.MetaContent')),

                                            ]),
                                        Forms\Components\Tabs\Tab::make('English')
                                            ->schema([
                                                Forms\Components\TextInput::make('name_en')
                                                    ->required()
                                                    ->maxLength(255)
                                                    ->live(onBlur: true)
                                                    ->label(__('main.Name'))
                                                    ->afterStateUpdated(fn(string $operation, $state, Forms\Set $set) => $operation === 'create' ? $set('slug_en', Str::slug($state)) : null),

                                                Forms\Components\TextInput::make('slug_en')
                                                    ->dehydrated()
                                                    ->label(__('main.Slug'))
                                                    ->required()
                                                    ->maxLength(255)
                                                    ->unique(Technologic::class, 'slug_en', ignoreRecord: true),
                                                Forms\Components\TextInput::make('meta_title_en')
                                                    ->maxLength(255)
                                                    ->live(onBlur: true)
                                                    ->required()
                                                    ->label(__('main.MetaTitle')),

                                                Forms\Components\MarkdownEditor::make('meta_description_en')
                                                    ->columnSpan('full')
                                                    ->required()
                                                    ->label(__('main.MetaContent')),

                                            ]),
                                    ])->columnSpan('full'),
                                Forms\Components\Section::make(__('main.Image'))
                                    ->schema([
                                        SpatieMediaLibraryFileUpload::make('media')
                                            ->collection('technologic-image')
                                            ->hiddenLabel(),
                                    ])
                                    ->collapsible(),
                            ])
                    ])
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('name_' . app()->getLocale())->label(__('main.Name')),
                Tables\Columns\SpatieMediaLibraryImageColumn::make('technologic-image')
                    ->label(__('main.Image'))
                    ->collection('technologic-image'),
            ])
            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\EditAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Products\Resources\TechnologicResource\Pages\ListTechnologics::route('/'),
            'create' => Products\Resources\TechnologicResource\Pages\CreateTechnologic::route('/create'),
            'edit' => Products\Resources\TechnologicResource\Pages\EditTechnologic::route('/{record}/edit'),
        ];
    }
}
