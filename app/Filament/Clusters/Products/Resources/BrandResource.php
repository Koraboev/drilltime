<?php

namespace App\Filament\Clusters\Products\Resources;

use App\Filament\Clusters\Products;
use App\Models\ShopBrand;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Notifications\Notification;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Support\Str;

class BrandResource extends Resource
{
    protected static ?string $model = ShopBrand::class;

    protected static ?string $cluster = Products::class;

    protected static ?string $recordTitleAttribute = 'name';

    protected static ?string $navigationIcon = 'heroicon-o-bookmark-square';

    public static function getNavigationParentItem(): ?string
    {
        return __('main.Products'); // TODO: Change the autogenerated stub
    }

    public static function getNavigationLabel(): string
    {
        return __('main.Brand'); // TODO: Change the autogenerated stub
    }
    public static function getLabel(): ?string
    {
        return __('main.Brand'); // TODO: Change the autogenerated stub
    }

    protected static ?int $navigationSort = 4;

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\Section::make()
                    ->schema([
                        Forms\Components\Grid::make()
                            ->schema([

                                Forms\Components\Tabs::make('Tabs')
                                    ->tabs([
                                        Forms\Components\Tabs\Tab::make('O\'zbek')
                                            ->schema([
                                                Forms\Components\TextInput::make('name_uz')
                                                    ->required()
                                                    ->maxLength(255)
                                                    ->label(__('main.Name'))
                                                    ->live(onBlur: true)
                                                    ->afterStateUpdated(fn(string $operation, $state, Forms\Set $set) => $operation === 'create' ? $set('slug_uz', Str::slug($state)) : null),

                                                Forms\Components\TextInput::make('slug_uz')
                                                    ->disabled()
                                                    ->dehydrated()
                                                    ->label(__('main.Slug'))
                                                    ->required()
                                                    ->maxLength(255)
                                                    ->unique(ShopBrand::class, 'slug_uz', ignoreRecord: true),
                                                Forms\Components\MarkdownEditor::make('description_uz')
                                                    ->label(__('main.Content')),
                                            ]),

                                        Forms\Components\Tabs\Tab::make('Pусский')
                                            ->schema([
                                                Forms\Components\TextInput::make('name_ru')
                                                    ->required()
                                                    ->maxLength(255)
                                                    ->label(__('main.Name'))
                                                    ->live(onBlur: true)
                                                    ->afterStateUpdated(fn(string $operation, $state, Forms\Set $set) => $operation === 'create' ? $set('slug_ru', Str::slug($state)) : null),

                                                Forms\Components\TextInput::make('slug_ru')
                                                    ->disabled()
                                                    ->dehydrated()
                                                    ->label(__('main.Slug'))
                                                    ->required()
                                                    ->maxLength(255)
                                                    ->unique(ShopBrand::class, 'slug_ru', ignoreRecord: true),
                                                Forms\Components\MarkdownEditor::make('description_ru')
                                                    ->label(__('main.Content')),
                                            ]),


                                        Forms\Components\Tabs\Tab::make('English')
                                            ->schema([
                                                Forms\Components\TextInput::make('name_en')
                                                    ->required()
                                                    ->maxLength(255)
                                                    ->label(__('main.Name'))
                                                    ->live(onBlur: true)
                                                    ->afterStateUpdated(fn(string $operation, $state, Forms\Set $set) => $operation === 'create' ? $set('slug_en', Str::slug($state)) : null),

                                                Forms\Components\TextInput::make('slug_en')
                                                    ->disabled()
                                                    ->dehydrated()
                                                    ->label(__('main.Slug'))
                                                    ->required()
                                                    ->maxLength(255)
                                                    ->unique(ShopBrand::class, 'slug_en', ignoreRecord: true),

                                                Forms\Components\MarkdownEditor::make('description_en')
                                                    ->label(__('main.Content')),
                                            ]),
                                    ])
                                    ->columnSpan('full'),


                                Forms\Components\Toggle::make('is_visible')
                                    ->label(__('main.Visible'))
                                    ->default(true)
                                    ->columnSpan('full'),

                                Forms\Components\TextInput::make('website')
                                    ->label(__('main.Website'))
                                    ->required()
                                    ->maxLength(255)
                                    ->url(),
                            ])
                            ->columnSpan(['lg' => fn(?ShopBrand $record) => $record === null ? 3 : 2]),
                        Forms\Components\Section::make()
                            ->schema([
                                Forms\Components\Placeholder::make('created_at')
                                    ->label('Created at')
                                    ->content(fn(ShopBrand $record): ?string => $record->created_at?->diffForHumans()),

                                Forms\Components\Placeholder::make('updated_at')
                                    ->label('Last modified at')
                                    ->content(fn(ShopBrand $record): ?string => $record->updated_at?->diffForHumans()),
                            ])
                            ->columnSpan(['lg' => 1])
                            ->hidden(fn(?ShopBrand $record) => $record === null),
                    ])

            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('name_' . app()->getLocale())
                    ->label(__('main.Name'))
                    ->searchable(),
                Tables\Columns\TextColumn::make('website')
                    ->label(__('main.Website'))
                    ->searchable(),
                Tables\Columns\IconColumn::make('is_visible')
                    ->label(__('main.Visible')),
            ])
            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\EditAction::make(),
            ])
            ->groupedBulkActions([
                Tables\Actions\DeleteBulkAction::make()
                    ->action(function () {
                        Notification::make()
                            ->title('Now, now, don\'t be cheeky, leave some records for others to play with!')
                            ->warning()
                            ->send();
                    }),
            ]);
//            ->defaultSort('sort')
//            ->reorderable('sort');
    }

    public static function getRelations(): array
    {
        return [
            \App\Filament\Clusters\Products\Resources\BrandResource\RelationManagers\ProductsRelationManager::class,
//            \App\Filament\Clusters\Products\Resources\BrandResource\RelationManagers\AddressesRelationManager::class,
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => \App\Filament\Clusters\Products\Resources\BrandResource\Pages\ListBrands::route('/'),
            'create' => \App\Filament\Clusters\Products\Resources\BrandResource\Pages\CreateBrand::route('/create'),
            'edit' => \App\Filament\Clusters\Products\Resources\BrandResource\Pages\EditBrand::route('/{record}/edit'),
        ];
    }
}
