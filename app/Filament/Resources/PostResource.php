<?php

namespace App\Filament\Resources;

use App\Filament\Resources\PostResource\Pages;
use App\Filament\Resources\PostResource\RelationManagers;
use App\Models\Category;
use App\Models\Language;
use App\Models\Post;
use App\Models\ShopBrand;
use App\Models\Tag;
use Filament\Forms;
use Filament\Forms\Components\FileUpload;
use Filament\Forms\Components\SpatieMediaLibraryFileUpload;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;
use Illuminate\Support\Str;
use Nette\Utils\Image;

class PostResource extends Resource
{
    protected static ?string $model = Post::class;

    public static function getNavigationGroup(): ?string
    {
        return __('main.Posts'); // TODO: Change the autogenerated stub
    }

    protected static ?int $navigationSort = 1;

    public static function getNavigationLabel(): string
    {
        return __('main.Posts'); // TODO: Change the autogenerated stub
    }

    public static function getLabel(): ?string
    {
        return __('main.Post'); // TODO: Change the autogenerated stub
    }


    protected static ?string $navigationIcon = 'heroicon-o-newspaper';

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\Section::make('Post')
                    ->schema([
                        Forms\Components\Grid::make()
                            ->schema([
                                Forms\Components\TextInput::make('title')
                                    ->label(__('main.Title'))
                                    ->required()
                                    ->maxLength(255)
                                    ->live(onBlur: true)
                                    ->afterStateUpdated(fn(string $operation, $state, Forms\Set $set) => $operation === 'create' ? $set('slug', Str::slug($state)) : null),

                                Forms\Components\TextInput::make('slug')
                                    ->label(__('main.Slug'))
                                    ->disabled()
                                    ->dehydrated()
                                    ->required()
                                    ->maxLength(255)
                                    ->unique(Post::class, 'slug', ignoreRecord: true),
                            ]),
                        Forms\Components\Grid::make()
                            ->schema([
                                Forms\Components\Select::make('category_id')
                                    ->label(__('main.Category'))
                                    ->required()
                                    ->options(Category::pluck('name_' . app()->getLocale(), 'id')),
                                Forms\Components\Select::make('language_id')
                                    ->required()
                                    ->label(__('main.Language'))
                                    ->options(Language::pluck('name', 'id')),
                                Forms\Components\Checkbox::make('status')
                                    ->default(false)
                            ]),
                        Forms\Components\RichEditor::make('description')
                            ->label(__('main.Content'))
                            ->required()
                            ->columnSpan('full'),
                        Forms\Components\Section::make(__('main.Image'))
                            ->schema([
                                SpatieMediaLibraryFileUpload::make('media')
                                    ->collection('post-image')
                                    ->maxFiles(1)
                                    ->imageEditor()
                                    ->optimize('webp')
                                    ->resize(50)
                                    ->hiddenLabel(),
                    ])
                            ->collapsible(),
                        Forms\Components\Section::make()
                            ->schema([
                                Forms\Components\TextInput::make('meta_title')
                                    ->label(__('main.MetaTitle'))
                                    ->required()
                                    ->maxLength(255),
                                Forms\Components\RichEditor::make('meta_description')
                                    ->label(__('main.MetaContent'))
                                    ->required()
                                    ->columnSpan('full'),
                            ]),

                    ])

            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                TextColumn::make('title'),
                TextColumn::make('slug'),
                Tables\Columns\SpatieMediaLibraryImageColumn::make('post-image')
                    ->label('Image')
                    ->collection('post-image'),
                TextColumn::make('category.name_uz')

            ])
            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\ViewAction::make(),
                Tables\Actions\EditAction::make(),
                Tables\Actions\DeleteAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListPosts::route('/'),
            'create' => Pages\CreatePost::route('/create'),
            'edit' => Pages\EditPost::route('/{record}/edit'),
        ];
    }
}
