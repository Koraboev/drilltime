<?php

namespace App\Filament\Resources;

use App\Filament\Resources\DilerResource\Pages;
use App\Filament\Resources\DilerResource\RelationManagers;
use App\Models\Diler;
use Filament\Forms;
use Filament\Forms\Components\SpatieMediaLibraryFileUpload;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class DilerResource extends Resource
{
    protected static ?string $model = Diler::class;

    protected static ?string $navigationIcon = 'heroicon-o-arrows-right-left';
    public static function getNavigationGroup(): ?string
    {
        return __('main.Home'); // TODO: Change the autogenerated stub
    }
    public static function getNavigationLabel(): string
    {
        return __('main.Diller'); // TODO: Change the autogenerated stub
    }

    public static function getLabel(): ?string
    {
        return __('main.Diller'); // TODO: Change the autogenerated stub
    }
    protected static ?int $navigationSort=4;

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\Section::make()
            ->schema([
                Forms\Components\Tabs::make('Tabs')
                    ->tabs([
                        Forms\Components\Tabs\Tab::make('O\'zbek')
                            ->schema([
                                Forms\Components\TextInput::make('title_uz')

                                    ->required()
                                    ->label(__('main.Title'))
                                    ->maxLength(255)
                                    ->live(onBlur: true),


                                Forms\Components\RichEditor::make('description_uz')
                                    ->label(__('main.Content'))

                            ]),

                        Forms\Components\Tabs\Tab::make('Pусский')
                            ->schema([
                                Forms\Components\TextInput::make('title_ru')
                                    ->required()
                                    ->label(__('main.Title'))
                                    ->maxLength(255)
                                    ->live(onBlur: true),
                                Forms\Components\RichEditor::make('description_ru')
                                    ->label(__('main.Content'))



                            ]),


                        Forms\Components\Tabs\Tab::make('English')
                            ->schema([
                                Forms\Components\TextInput::make('title_en')
                                    ->required()
                                    ->label(__('main.Title'))
                                    ->maxLength(255)
                                    ->live(onBlur: true),
                                Forms\Components\RichEditor::make('description_en')
                                    ->label(__('main.Content'))


                            ]),

                    ])->columnSpan('full'),
                SpatieMediaLibraryFileUpload::make('media')
                    ->collection('diler-image')
                    ->maxFiles(1)
                    ->hiddenLabel()
                    ->imageEditor()
                ->columnSpan('full')

            ])
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                TextColumn::make('title_'.app()->getLocale())->label(__('main.Title')),
                Tables\Columns\SpatieMediaLibraryImageColumn::make('diler-image')
                    ->label(__('main.Image'))
                    ->collection('diler-image'),
            ])
            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\EditAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListDilers::route('/'),
            'create' => Pages\CreateDiler::route('/create'),
            'edit' => Pages\EditDiler::route('/{record}/edit'),
        ];
    }
}
